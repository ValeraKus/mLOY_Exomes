ggplot(mosdepth, aes(x = V1, y=V4, fill=V1))+
geom_boxplot()+
geom_jitter(color='lightgrey', alpa=0.2, size=0.01)+
theme_bw()
ggplot(mosdepth, aes(x = V1, y=V4, fill=V1))+
geom_boxplot()+
geom_jitter(color='lightgrey', alpha=0.2, size=0.01)+
theme_bw()
ggplot(mosdepth, aes(x = V1, y=V4, fill=V1))+
geom_histogram()+
theme_bw()
ggplot(mosdepth, aes(x = V4, fill=V1))+
geom_histogram()+
theme_bw()
ggplot(mosdepth, aes(x = V4, fill=V1))+
geom_histogram(alpha=0.2)+
theme_bw()
ggplot(mosdepth, aes(x = V4, fill=V1))+
geom_histogram(alpha=0.4)+
theme_bw()
ggplot(mosdepth[mosdepth$V1 == "chrY"])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=10))+
theme_bw()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=10))+
theme_bw()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=10))+
theme_minimal()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=10))+
theme_light()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=10))+
theme_linedraw()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=10, fill='red'))+
theme_linedraw()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=10), fill='red')+
theme_linedraw()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=V4), fill='red')+
theme_linedraw()
ggplot(mosdepth[mosdepth$V1 == "chr1",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=V4), fill='red')+
theme_linedraw()
ggplot(mosdepth[mosdepth$V1 == "chrY",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=V4), fill='red')+
theme_linedraw()
ggplot(mosdepth[mosdepth$V1 == "chr1",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=V4), fill='red')+
theme_linedraw()
ggplot(mosdepth[mosdepth$V1 == "chrX",])+
geom_rect(aes(xmin=V2, xmax=V3, ymin=0, ymax=V4), fill='red')+
theme_linedraw()
rm(list = ls(all=T))
shcs_chip <- read.table("../resources/CHIP/DataFromVanderbuilt/CHIP_calls_9903_per_person.txt", sep="\t", header=T)
View(shcs_chip)
shcs_chip <- shcs_chip[shcs_chip$CHIP != "removed",]
View(shcs_chip)
sample_manifest <- read.table("../resources/CHIP/DataFromVanderbuilt/9903-NH_SampleManifest.txt", sep="\t", header=T)
View(sample_manifest)
sample_manifest <- sample_manifest[sample_manifest$Sample.Description != "Empty",]
sample_manifest$Sample.Description
sample_manifest$ID <- gsub("ID SHCS ", "", sample_manifest$Sample.Description)
sample_manifest$ID
sample_manifest$ID <- as.numeric(gsub("ID SHCS ", "", sample_manifest$Sample.Description))
sample_manifest$ID
shcs_chip <- merge(shcs_chip, sample_manifest[,c(1,12)], by.x="Sample", by.y="Sample.ID", all.x=T)
View(shcs_chip)
shcs_chip <- shcs_chip[shcs_chip$Sample != "",]
metabolomics_ids <- read.table("../resources/CHIP/SHCS_metabolomics_patients_ids.txt")
View(metabolomics_ids)
metabolomics_ids <- read.table("../resources/CHIP/SHCS_metabolomics_patients_ids.txt", header = T)$x
metabolomics_ids <- as.numeric(read.table("../resources/CHIP/SHCS_metabolomics_patients_ids.txt", header = T)$x)
metabolomics_ids <- metabolomics_ids[!duplicated(metabolomics_ids)]
metabolomics_ids[is.na(metabolomics_ids)]
metabolomics_ids <- metabolomics_ids[!is.na(metabolomics_ids)]
length(intersect(metabolomics_ids, shcs_chip$ID))
shcs_chip$Metabolomics <- ifelse(shcs_chip$ID %in% metabolomics_ids, 1, 0)
shcs_chip_meta <- shcs_chip[shcs_chip$Metabolomics == 1,]
table(shcs_chip_meta$CHIP)
table(shcs_chip_meta$CHIP)[2]
sum(table(shcs_chip_meta$CHIP))
table(shcs_chip_meta$CHIP)[2]/sum(table(shcs_chip_meta$CHIP))
View(sample_manifest)
View(shcs_chip_meta)
dates <- read.table("../resources/CHIP/BloodSamplesForBigChipProject.NeededAndAvailable.txt", header=T)
View(dates)
as.Date(dates$CollectionDate)
as.Date(dates$DateOfBirth)
dates$SampleAge <- as.numeric((as.Date(dates$CollectionDate)-as.Date(dates$DateOfBirth))/365.25)
daates <- dates[dates$ID %in% metabolomics_ids,]
dates <- dates[dates$ID %in% metabolomics_ids,]
hist(dates$SampleAge)
barplot(shcs_chip_meta[shcs_chip_meta$CHIP == "1",]$Top_CHIP_Gene)
shcs_chip_meta[shcs_chip_meta$CHIP == "1",]
barplot(table(shcs_chip_meta[shcs_chip_meta$CHIP == "1",]$Top_CHIP_Gene))
hist(dates$SampleAge)
library(ggplot2)
ggplot(shcs_chip_meta[shcs_chip_meta$CHIP == "1",], aes(x=Top_CHIP_Gene))+
geom_bar()
ggplot(shcs_chip_meta[shcs_chip_meta$CHIP == "1",], aes(x=Top_CHIP_Gene, fill=Top_CHIP_Gene))+
geom_bar()+
theme_bw()
ggplot(shcs_chip_meta[shcs_chip_meta$CHIP == "1",], aes(x=reorder(Top_CHIP_Gene), fill=Top_CHIP_Gene))+
geom_bar()+
theme_bw()+
theme(legend.position = "None")
ggplot(shcs_chip_meta[shcs_chip_meta$CHIP == "1",], aes(x=reorder(Top_CHIP_Gene, Top_CHIP_Gene, function(x)-length(x)), fill=Top_CHIP_Gene))+
geom_bar()+
theme_bw()+
theme(legend.position = "None")
ggplot(shcs_chip_meta[shcs_chip_meta$CHIP == "1",], aes(x=reorder(Top_CHIP_Gene, Top_CHIP_Gene, function(x)-length(x)), fill=Top_CHIP_Gene))+
geom_bar()+
theme_bw()+
theme(legend.position = "None")+
xlab("Top CHIP Gene")
ggplot(shcs_chip_meta[shcs_chip_meta$CHIP == "1",], aes(x=N_CHIP))+
geom_bar()+
theme_bw()+
theme(legend.position = "None")+
xlab("Number of CHIP variants")
ggplot(shcs_chip_meta[,], aes(x=N_CHIP))+
geom_bar()+
theme_bw()+
theme(legend.position = "None")+
xlab("Number of CHIP variants")
BiocManager::install("CNOGpro")
library(CNOGpro)
library(CNOGpro)
bimX <- read.table("Downloads/ukb22418_cX_b0_v2.bim")
View(bimX)
bimY <- read.table("Downloads/ukb22418_cY_b0_v2.bim")
bimXY <- read.table("Downloads/ukb22418_cXY_b0_v2.bim")
bimX <- read.table("Downloads/ukb22418_cX_b0_v2.bim")
bimY <- read.table("Downloads/ukb22418_cY_b0_v2.bim")
bimXY <- read.table("Downloads/ukb22418_cXY_b0_v2.bim")
View(bimY)
summary(bimX$V4)
summary(bimX$V4)
summary(bimY$V4)
summary(bimXY$V4)
View(bimY)
View(bimX)
View(bimY)
View(bimX)
View(bimXY)
library(ggplot2)
ggplot(bimXY, aes(x=V4, y=2))+
geom_point()
ggplot(bimXY, aes(x=V4, y="Y"))+
geom_point()
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point()+
geom_point(data=bimY, aes(x=V4, y="Y"))
View(bimXY)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point()+
geom_point(data=bimY, aes(x=V4, y="Y"))+
geom_point(data=bimX, aes(x=V4, y="X"))
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5)+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5)+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5)+
theme_classic()+
ylab("")+
xlab("")
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5)+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5)+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5)+
theme_bw()+
ylab("")+
xlab("")
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
theme_bw()+
ylab("")+
xlab("")
summary(bimY$V4)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
geom_vline(xintercept = min(bimX$V4), color="green4")+
geom_vline(xintercept = min(bimY$V4), color="skyblue3")+
geom_vline(xintercept = max(bimXY$V4), color="red")+
theme_bw()+
ylab("")+
xlab("")
min(bimX$V4)
min(bimY$V4)
max(bimXY$V4)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
geom_vline(xintercept = min(bimX$V4), color="green4")+
geom_vline(xintercept = min(bimY$V4), color="skyblue3")+
geom_vline(xintercept = max(bimXY[bimXY$V4 < 5e+7,]$V4), color="red")+
theme_bw()+
ylab("")+
xlab("")
max(bimXY[bimXY$V4 < 5e+7,]$V4)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
geom_vline(xintercept = min(bimX$V4), color="green4")+
geom_vline(xintercept = min(bimY$V4), color="skyblue3")+
geom_vline(xintercept = max(bimXY[bimXY$V4 < 5e+7,]$V4), color="red")+
theme_bw()+
ylab("")+
xlab("")+
xlim(0,2.6e+6)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
geom_vline(xintercept = min(bimX$V4), color="green4")+
geom_vline(xintercept = min(bimY$V4), color="skyblue3")+
geom_vline(xintercept = max(bimXY[bimXY$V4 < 5e+7,]$V4), color="red")+
theme_bw()+
ylab("")+
xlab("")+
xlim(0,2.7e+6)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
geom_vline(xintercept = min(bimX$V4), color="green4")+
geom_vline(xintercept = min(bimY$V4), color="skyblue3")+
geom_vline(xintercept = max(bimXY[bimXY$V4 < 5e+7,]$V4), color="red")+
theme_bw()+
ylab("")+
xlab("")+
xlim(2.6e+6,2.7e+6)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
geom_vline(xintercept = min(bimX$V4), color="green4")+
geom_vline(xintercept = min(bimY$V4), color="skyblue3")+
geom_vline(xintercept = max(bimXY[bimXY$V4 < 5e+7,]$V4), color="red")+
theme_bw()+
ylab("")+
xlab("")+
xlim(2.6e+6,2.75e+6)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
theme_bw()+
ylab("")+
xlab("")
snpQC <- readLines("Downloads/mLOY_array_snps_qc_pass.snplist")
snpQC_inclY <- readLines("Downloads/mLOY_array_snps_qc_pass_inclY.snplist")
bimX[bimX$V2 %in snpQC,]
bimX_QC <- bimX[bimX$V2 %in% snpQC,]
bimX_QCY <- bimX[bimX$V2 %in% snpQC_inclY,]
bimXY_QC <- bimX[bimXY$V2 %in% snpQC,]
bimXY_QC <- bimXY[bimXY$V2 %in% snpQC,]
bimXY_QCY <- bimXY[bimXY$V2 %in% snpQC_inclY,]
bimY_QC <- bimY[bimY$V2 %in% snpQC,]
bimY_QCY <- bimY[bimY$V2 %in% snpQC_inclY,]
View(bimY_QCY)
ggplot(bimXY_QCY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY_QCY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX_QCY, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
theme_bw()+
ylab("")+
xlab("")
library(ggplot2)
ggplot(bimXY_QCY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY_QCY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX_QCY, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
theme_bw()+
ylab("")+
xlab("")
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
theme_bw()+
ylab("")+
xlab("")
bimX <- read.table("Downloads/ukb22418_cX_b0_v2.bim")
bimY <- read.table("Downloads/ukb22418_cY_b0_v2.bim")
bimXY <- read.table("Downloads/ukb22418_cXY_b0_v2.bim")
summary(bimX$V4)
summary(bimY$V4)
summary(bimXY$V4)
library(ggplot2)
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
theme_bw()+
ylab("")+
xlab("")
ggplot(bimXY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
geom_vline(xintercept = min(bimX$V4), color="green4")+
geom_vline(xintercept = min(bimY$V4), color="skyblue3")+
geom_vline(xintercept = max(bimXY[bimXY$V4 < 5e+7,]$V4), color="red")+
theme_bw()+
ylab("")+
xlab("")+
xlim(2.6e+6,2.75e+6)
snpQC <- readLines("Downloads/mLOY_array_snps_qc_pass.snplist")
snpQC_inclY <- readLines("Downloads/mLOY_array_snps_qc_pass_inclY.snplist")
bimX_QC <- bimX[bimX$V2 %in% snpQC,]
bimX_QCY <- bimX[bimX$V2 %in% snpQC_inclY,]
bimXY_QC <- bimXY[bimXY$V2 %in% snpQC,]
bimXY_QCY <- bimXY[bimXY$V2 %in% snpQC_inclY,]
bimY_QC <- bimY[bimY$V2 %in% snpQC,]
bimY_QCY <- bimY[bimY$V2 %in% snpQC_inclY,]
ggplot(bimXY_QCY, aes(x=V4, y="XY"))+
geom_point(size=2, alpha=0.5, color="red")+
geom_point(data=bimY_QCY, aes(x=V4, y="Y"), size=2, alpha=0.5, color="skyblue3")+
geom_point(data=bimX_QCY, aes(x=V4, y="X"), size=2, alpha=0.5, color="green4")+
theme_bw()+
ylab("")+
xlab("")
setwd("~/Desktop/Work/mLOY_Exomes")
#set working directory
setwd("./")
#exome caprute intervals (.bed)
#example for exome capture used in the UKB
#replace with the relevant intervals file
exome_capture <- read.table("resources/ukb_xgen_plus_spikein.GRCh38.bed")
gc()
#exome caprute intervals (.bed)
#example for exome capture used in the UKB
#replace with the relevant intervals file
exome_capture <- read.table("resources/ukb_xgen_plus_spikein.GRCh38.bed")
View(exome_capture)
exome_capture_chrY <- exome_capture[exome_capture$V1 == "chrY",]
View(exome_capture_chrY)
#Homo sapiens genome annotation
annot <- read.table(gzfile("resources/Homo_sapiens.GRCh38.112.chr.gtf.gz"), header=F, sep='\t')
exome_capture <- exome_capture[exome_capture$V1 == "chrY",]
annot <- annot[(annot$V1 == "Y") & (annot$V3 == "gene"),]
strsplit(annot$V9, "; ")
#load libraries
library(tidyverse)
annot <- annot %>%
mutate(V9 = strsplit(annot$V9, "; ")) %>%
unnest(V9) %>%
group_by(V4) %>%
mutate(row = row_number()) %>%
spread(row, V9)
View(annot)
View(annot)
colnames(annot) <- c("Chr", 'source', 'type', 'start', 'end', 'V6', 'strand', 'V8', 'EnsemblID',
'gene_version', 'gene_name', 'gene_source', 'gene_biotype')
annot <- annot[!grepl("gene_biotype" ,annot$gene_source),]
annot <- annot %>%
mutate(EnsemblID = gsub("gene_id ", "", EnsemblID)) %>%
mutate(gene_version = gsub("gene_version ", "", gene_version)) %>%
mutate(gene_name =gsub("gene_name ", "", gene_name)) %>%
mutate(gene_source = gsub("gene_source ", "", gene_source)) %>%
mutate(gene_biotype = gsub("gene_biotype |;", "", gene_biotype))
annot <- annot[annot$gene_biotype == "protein_coding",]
annot <- annot[(annot$start > 2781479) & (annot$end > 2781479) & (annot$start < 56887903) &
(annot$end < 56887903),]
View(annot)
single_copy_genes <- read.table("resources/xgen_plus_spikein_chrY_singleCopyGenes.GRCh38.bed")
View(single_copy_genes)
single_copy_genes_ref <- read.table("resources/xgen_plus_spikein_chrY_singleCopyGenes_refined.GRCh38.bed")
View(single_copy_genes_ref)
matched <- read.table("resources/exome_capture_matched_intervals.groups.bed")
View(matched)
matched <- read.table("resources/exome_capture_matched_intervals.groups.bed") %>% filter(V1 == "chrY")
View(matched)
single_copy_genes_ref
View(annot)
i=1
single_copy_genes_ref[i,]
s=single_copy_genes_ref[i,]
s=single_copy_genes_ref[i,]$V2
e=single_copy_genes_ref[i,]$V3
annot[annot$start <= s & annot$end >= e,]
gene=annot[annot$start <= s & annot$end >= e,]$gene_name
single_copy_genes_ref$gene_name <- NA
single_copy_genes_ref[i,]$gene_name=annot[annot$start <= s & annot$end >= e,]$gene_name
single_copy_genes_ref
single_copy_genes_ref$gene_name <- NA
for (i in 1:nrow(single_copy_genes_ref)) {
s=single_copy_genes_ref[i,]$V2
e=single_copy_genes_ref[i,]$V3
single_copy_genes_ref[i,]$gene_name=annot[annot$start <= s & annot$end >= e,]$gene_name
}
View(single_copy_genes_ref)
write.table("resources/xgen_plus_spikein_chrY_singleCopyGenes_annotated.GRCh38.bed")
write.table(single_copy_genes_ref, "resources/xgen_plus_spikein_chrY_singleCopyGenes_annotated.GRCh38.bed")
single_copy_genes_ref
write.table(single_copy_genes_ref, "resources/xgen_plus_spikein_chrY_singleCopyGenes_annotated.GRCh38.bed", quote = F)
unique(single_copy_genes_ref$gene_name)
#=> we chose 173 exones
single_genes <- c("SRY" ,    "RPS4Y1",  "ZFY"  ,   "PCDH11Y" ,"AMELY" ,  "TBL1Y" ,  "USP9Y" ,
"DDX3Y" ,  "UTY"  ,   "TMSB4Y" , "NLGN4Y",  "KDM5D" ,  "EIF1AY" , "RPS4Y2" )
annot_filtered <- annot[annot$gene_name %in% single_genes,]
View(annot_filtered)
View(matched)
#exome caprute intervals (.bed)
#example for exome capture used in the UKB
#replace with the relevant intervals file
exome_capture <- read.table("resources/ukb_xgen_plus_spikein.GRCh38.bed")
exome_capture <- exome_capture[exome_capture$V1 == "chrY",]
#Homo sapiens genome annotation
annot <- read.table(gzfile("resources/Homo_sapiens.GRCh38.112.chr.gtf.gz"), header=F, sep='\t')
annot <- annot[(annot$V1 == "Y") & (annot$V3 == "gene"),]
annot <- annot %>%
mutate(V9 = strsplit(annot$V9, "; ")) %>%
unnest(V9) %>%
group_by(V4) %>%
mutate(row = row_number()) %>%
spread(row, V9)
colnames(annot) <- c("Chr", 'source', 'type', 'start', 'end', 'V6', 'strand', 'V8', 'EnsemblID',
'gene_version', 'gene_name', 'gene_source', 'gene_biotype')
annot <- annot[!grepl("gene_biotype" ,annot$gene_source),]
annot <- annot %>%
mutate(EnsemblID = gsub("gene_id ", "", EnsemblID)) %>%
mutate(gene_version = gsub("gene_version ", "", gene_version)) %>%
mutate(gene_name =gsub("gene_name ", "", gene_name)) %>%
mutate(gene_source = gsub("gene_source ", "", gene_source)) %>%
mutate(gene_biotype = gsub("gene_biotype |;", "", gene_biotype))
# we are interested only in protein coding genes
annot <- annot[annot$gene_biotype == "protein_coding",]
#and only in the ones located in MSY
annot <- annot[(annot$start > 2781479) & (annot$end > 2781479) & (annot$start < 56887903) &
(annot$end < 56887903),]
single_genes <- c("SRY" ,    "RPS4Y1",  "ZFY"  ,   "PCDH11Y" ,"AMELY" ,  "TBL1Y" ,  "USP9Y" ,
"DDX3Y" ,  "UTY"  ,   "TMSB4Y" , "NLGN4Y",  "KDM5D" ,  "EIF1AY" , "RPS4Y2" )
annot_filtered <- annot[annot$gene_name %in% single_genes,]
View(exome_capture)
View(exome_capture)
annot_filtered
single_genes_coord <- apply(annot_filtered, 1, start:end)
single_genes_coord <- apply(annot_filtered, 1, annot_filtered$start:annot_filtered$end)
single_genes_coord <- apply(annot_filtered, 1, annot_filtered[,4]:annot_filtered[,5])
for (i in 1:nrow(annot_filtered)) {
single_genes_coord <- c(single_genes_coord, annot_filtered[i,]$start:annot_filtered[i,]$end)
}
single_genes_coord <- c()
for (i in 1:nrow(annot_filtered)) {
single_genes_coord <- c(single_genes_coord, annot_filtered[i,]$start:annot_filtered[i,]$end)
}
single_genes_coord
exome_capture[exome_capture$V2 %in% single_genes_coord & exome_capture$V3 %in% single_genes_coord,]
exome_capture_single_genes <- exome_capture[exome_capture$V2 %in% single_genes_coord & exome_capture$V3 %in% single_genes_coord,]
View(exome_capture_single_genes)
chosen <- read.table("resources/xgen_plus_spikein_chrY_singleCopyGenes_annotated.GRCh38.bed")
View(chosen)
exome_capture_single_genes <- merge(exome_capture_single_genes, chosen, by=c("V1", "V2", "V3"), all=T)
View(exome_capture_single_genes)
View(annot_filtered)
single_genes <- c("SRY" ,    "RPS4Y1",  "ZFY" ,"AMELY" ,  "TBL1Y" ,  "USP9Y" ,
"DDX3Y" ,  "UTY"  ,   "TMSB4Y" , "NLGN4Y",  "KDM5D" ,  "EIF1AY" , "RPS4Y2" )
annot_filtered <- annot[annot$gene_name %in% single_genes,]
single_genes_coord <- c()
for (i in 1:nrow(annot_filtered)) {
single_genes_coord <- c(single_genes_coord, annot_filtered[i,]$start:annot_filtered[i,]$end)
}
exome_capture_single_genes <- exome_capture[exome_capture$V2 %in% single_genes_coord & exome_capture$V3 %in% single_genes_coord,]
View(exome_capture_single_genes)
chosen <- read.table("resources/xgen_plus_spikein_chrY_singleCopyGenes_annotated.GRCh38.bed")
exome_capture_single_genes <- merge(exome_capture_single_genes, chosen, by=c("V1", "V2", "V3"), all=T)
View(exome_capture_single_genes)
single_genes_coord <- c()
for (i in 1:nrow(annot_filtered)) {
single_genes_coord <- c(single_genes_coord, annot_filtered[i,]$start:annot_filtered[i,]$end)
}
exome_capture_single_genes <- exome_capture[exome_capture$V2 %in% single_genes_coord & exome_capture$V3 %in% single_genes_coord,]
View(exome_capture_single_genes)
exome_capture_single_genes <- merge(exome_capture_single_genes, chosen, by=c("V1", "V2", "V3"), all.x=T)
View(exome_capture_single_genes)
write.table(exome_capture_single_genes, "resources/test.annot.bed")
exome_capture_single_genes <- exome_capture[exome_capture$V2 %in% single_genes_coord & exome_capture$V3 %in% single_genes_coord,]
View(annot)
#Homo sapiens genome annotation
annot <- read.table(gzfile("resources/Homo_sapiens.GRCh38.112.chr.gtf.gz"), header=F, sep='\t')
annot <- annot[(annot$V1 == "Y") & (annot$V3 == "gene"),]
annot <- annot %>%
mutate(V9 = strsplit(annot$V9, "; ")) %>%
unnest(V9) %>%
group_by(V4) %>%
mutate(row = row_number()) %>%
spread(row, V9)
colnames(annot) <- c("Chr", 'source', 'type', 'start', 'end', 'V6', 'strand', 'V8', 'EnsemblID',
'gene_version', 'gene_name', 'gene_source', 'gene_biotype')
annot <- annot[!grepl("gene_biotype" ,annot$gene_source),]
annot <- annot %>%
mutate(EnsemblID = gsub("gene_id ", "", EnsemblID)) %>%
mutate(gene_version = gsub("gene_version ", "", gene_version)) %>%
mutate(gene_name =gsub("gene_name ", "", gene_name)) %>%
mutate(gene_source = gsub("gene_source ", "", gene_source)) %>%
mutate(gene_biotype = gsub("gene_biotype |;", "", gene_biotype))
# we are interested only in protein coding genes
annot <- annot[annot$gene_biotype == "protein_coding",]
View(annot)
exome_capture_single_genes <- exome_capture[exome_capture$V2 %in% single_genes_coord & exome_capture$V3 %in% single_genes_coord,]
write.table(exome_capture_single_genes, "resources/xgen_plus_spikein_chrY_singleCopyGenes.GRCh38.bed", quote=F, sep="\t")
